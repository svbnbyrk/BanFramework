<?xml version="1.0" encoding="utf-8"?>
<Symbols LinesOfCode="42" PostSharpLinesOfCode="0" xmlns="http://schemas.postsharp.org/2.0/symbols">
  <Class Class="#1=T:[BanFramework.Core]BanFramework.Core.Aspects.PostSharp.ValidationAspects.FluentValidationAspect">
    <Instance Declaration="#2=M:[BanFramwork.Mssql.Business]BanFramework.Mssql.Business.Concert.Managers.ProductManager::Add(BanFramework.Mssql.Entities.Concrete.Product)" Id="c0ad662b9b56f1be">
      <Target>
        <JoinPoint Advising="#1" Description="#3=Wrapped by advice(s) OnEntry, OnSuccess, OnException, OnExit" Ordinal="0" />
      </Target>
    </Instance>
    <Instance Declaration="#4=M:[BanFramwork.Mssql.Business]BanFramework.Mssql.Business.Concert.Managers.ProductManager::Update(BanFramework.Mssql.Entities.Concrete.Product)" Id="c0ad662b68883bc2">
      <Target>
        <JoinPoint Advising="#1" Description="#3" Ordinal="2" />
      </Target>
    </Instance>
  </Class>
  <Class Class="#5=T:[BanFramework.Core]BanFramework.Core.Aspects.PostSharp.TransactionAspects.TransactionScopeAspect">
    <Instance Declaration="#6=M:[BanFramwork.Mssql.Business]BanFramework.Mssql.Business.Concert.Managers.ProductManager::TransactionalOperation(BanFramework.Mssql.Entities.Concrete.Product, BanFramework.Mssql.Entities.Concrete.Product)" Id="c0ad662b2c11c267">
      <Target>
        <JoinPoint Advising="#5" Description="#3" Ordinal="3" />
      </Target>
    </Instance>
  </Class>
  <Class Class="#7=T:[BanFramework.Core]BanFramework.Core.Aspects.PostSharp.CacheAspects.CacheAspect">
    <Instance Declaration="#8=M:[BanFramwork.Mssql.Business]BanFramework.Mssql.Business.Concert.Managers.ProductManager::GetAll()" Id="c0ad662bf63649bc">
      <Target>
        <JoinPoint Advising="#7" Description="#9=Intercepted by OnInvoke" />
      </Target>
    </Instance>
  </Class>
  <Annotation Target="#10=M:[BanFramework.Core]BanFramework.Core.Aspects.PostSharp.ValidationAspects.FluentValidationAspect::OnEntry(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#11=2" Description="#12=PostSharp estimates that 2 line(s) of code are saved every time this advice is applied. Use the [LinesOfCodeAvoided] attribute on the aspect or specify the LinesOfCodeAvoided property on the advice attribute to override this value." />
  <Annotation Target="#13=M:[PostSharp]PostSharp.Aspects.OnMethodBoundaryAspect::OnSuccess([PostSharp]PostSharp.Aspects.MethodExecutionArgs)" Arguments="#11" Description="#12" />
  <Annotation Target="#14=M:[PostSharp]PostSharp.Aspects.OnMethodBoundaryAspect::OnExit([PostSharp]PostSharp.Aspects.MethodExecutionArgs)" Arguments="#11" Description="#12" />
  <Annotation Target="#15=M:[PostSharp]PostSharp.Aspects.OnMethodBoundaryAspect::OnException([PostSharp]PostSharp.Aspects.MethodExecutionArgs)" Arguments="#11" Description="#12" />
  <Annotation Target="#16=M:[BanFramework.Core]BanFramework.Core.Aspects.PostSharp.TransactionAspects.TransactionScopeAspect::OnEntry(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#11" Description="#12" />
  <Annotation Target="#17=M:[BanFramework.Core]BanFramework.Core.Aspects.PostSharp.TransactionAspects.TransactionScopeAspect::OnSuccess(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#11" Description="#12" />
  <Annotation Target="#18=M:[BanFramework.Core]BanFramework.Core.Aspects.PostSharp.TransactionAspects.TransactionScopeAspect::OnExit(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#11" Description="#12" />
</Symbols>